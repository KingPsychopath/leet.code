class Solution:
    def removeDuplicates(self, nums: [int]) -> int:
        # if the list is empty, return 0
        if not nums:
            return 0

        # initialize a pointer l to 1
        l = 1

        # iterate through the list with a pointer r starting from index 1
        for r in range(1, len(nums)):
            # if the current element is not equal to the previous element
            if nums[r] != nums[r-1]:
                # set the value of the element at index l to the current element
                nums[l] = nums[r]
                # increment the pointer l
                l += 1

        # return the length of the new list with duplicates removed
        return l
    

# Time Complexity: O(n)
# Testing:
nums = [1, 1, 2]
print(Solution().removeDuplicates(nums)) # 2    # nums = [1, 2]
nums = [0,0,1,1,1,2,2,3,3,4]
print(Solution().removeDuplicates(nums)) # 5    # nums = [0, 1, 2, 3, 4]
print(nums)